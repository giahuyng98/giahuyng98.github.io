{"componentChunkName":"component---src-templates-blog-post-js","path":"/week03/oop/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"2e65ac00-3c36-5d0c-bf5d-52dfba5cd924","excerpt":"OOP basic Object-oriented programming (OOP): programming paradigm base on the concept of object contain: attributes and methods Classes: Definitions for the…","html":"<h1>OOP basic</h1>\n<ul>\n<li>Object-oriented programming (OOP): programming paradigm base on the concept of <strong>object</strong> contain: attributes and methods</li>\n<li>Classes: Definitions for the data format and vailable procedures.</li>\n<li>Objects: Instances of classes</li>\n<li>Dynamic dispatch: select the procedural code to execute when call method (message passing), (by lookup method at run time in object table)</li>\n<li>\n<p>OOP Concepts/Features</p>\n<ul>\n<li>Encapsulation: Binds together the data and functions, keep both safe from outsite => data hiding</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Square</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">;</span> <span class=\"token comment\">// data-hiding</span>\n\n<span class=\"token comment\">// ...getter/setter</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">float</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> size <span class=\"token operator\">*</span> size<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// `pack` information about a square to a class...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Abstraction: object should <em>only</em> expose a high-level mechanism for using it, hide implementation details.</li>\n<li>Composition: Object can contain other objects in their instance variables. Represent <strong>has-a</strong> relationships.</li>\n<li>Inheritance: <strong>is-a-type-of</strong> relationships, reuse the same procedures and data definitions, subclass can override the methods defined by supperclasses,</li>\n<li>Multiple inheritance: inheritance from more 2 or more class</li>\n<li>Abstract classes: Can’t be instantiated</li>\n<li>Composition over inheritance: Golang</li>\n<li>Polymorphism: run which code? the parent class or one of its descendants</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Person {\"</span> <span class=\"token operator\">+</span>\n               <span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> \n               <span class=\"token string\">\"Age: \"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">\"}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EmployeeCard</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> cardNumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// inheritance</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">EmployeeCard</span> card<span class=\"token punctuation\">;</span> <span class=\"token comment\">// compositions</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Coder</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Coder {\"</span> <span class=\"token operator\">+</span>\n               <span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> \n               <span class=\"token string\">\"Age: \"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">\"}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ITHelper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"ITHelper {\"</span> <span class=\"token operator\">+</span>\n               <span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> \n               <span class=\"token string\">\"Age: \"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">\"}\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Printer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// polymorphism</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>Purely OOP</h1>\n</li>\n<li>\n<p>7 qualities:</p>\n<ol>\n<li>Encapsulation/Data Hiding</li>\n<li>Inheritance</li>\n<li>Polymorphism</li>\n<li>Abstraction</li>\n<li>All predefined types are objects</li>\n<li>All user defined types are objects</li>\n<li>All operations performed on objects must be only through methods exposed at the objects</li>\n</ol>\n</li>\n</ul>\n<h1>Design patterns</h1>\n<ul>\n<li>\n<p>Gang of Four</p>\n<ol>\n<li>Cretional patterns (5):</li>\n<li>Factory method</li>\n<li>Abstract factory</li>\n<li>Singleton</li>\n<li>Builder</li>\n<li>Prototype</li>\n<li>Structural patterns (7):</li>\n<li>Adapter</li>\n<li>Bridge</li>\n<li>Composite</li>\n<li>Decorator</li>\n<li>Facade</li>\n<li>Flyweight</li>\n<li>Proxy</li>\n<li>Behavioral (11)</li>\n<li>Chain-of-responsibility</li>\n<li>Command</li>\n<li>Interpreter</li>\n<li>Iterator</li>\n<li>Mediator</li>\n<li>Memento</li>\n<li>Observer</li>\n<li>State</li>\n<li>Strategy</li>\n<li>Template method</li>\n<li>Visitor</li>\n</ol>\n</li>\n</ul>","frontmatter":{"title":"OOP","date":"July 29, 2020","description":"OOP"}}},"pageContext":{"slug":"/week03/oop/","previous":{"fields":{"slug":"/week03/lsm-tree/"},"frontmatter":{"title":"LSM Tree"}},"next":{"fields":{"slug":"/week02/todo/"},"frontmatter":{"title":"TODO"}}}}}